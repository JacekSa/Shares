 
 After reading the requirements the following assumptions were made :
 
 - User needs to be able to insert a price . A console based input/output will be provided .
 - Each time a user inserts a data for a stock (price,symbol) it is a sale/buy action .
 and the sale/buy indicator must be provided .
 
 - User must control the end and a start of each transaction . Each transaction has some
 traded stocks in it (bought or sold) . 
 
 - The stocks are persisted in an xml file for validation and the additional data storage .
 
 - The application should be modular which each module responsible for a single piece of functionality :
   Financial data calculation , Trades , Stock , Data Input Module .
   
 - Using a divide and conquer strategy allows to address all the requirements one by one , developing
   the code in each of the modules .
   
 - Transaction repository is a singleton .  
   
 workflow : 
 
 -  I have developed a test which will check if a proper transaction object structure is created .
  
 -  I have developed a test which will check if stocks objects are created correctly .  
 
 -  Input logic was created .
 
 -  I have developed a test for a common dividend .
 
 -  Common dividend was implemented .	
 
 -  Same steps were repeated for all the other financial data (p/e , VWSP etc .) 
 
 -  The data is not displayed in the console as there is no such requirement . Calculated figures are stored in memory .
 
    When running from console the lib folder must be provided :
 
    bin>  java -cp ../lib/*:. com.jacek.stock.Run
 
  
  